/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui.AdminPanels;

import ControlClasses.Employee;
import ControlClasses.sound;
import DatabaseManager.DatabaseManager;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author omar waheed
 */
public class ListEmps extends javax.swing.JPanel {
    DatabaseManager x;
    sound s;
    public ListEmps() {
        initComponents();
        x=new DatabaseManager();
        s=new sound();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BringData = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 136, 167));
        setPreferredSize(new java.awt.Dimension(855, 378));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(0, 136, 167));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Name", "Gender", "Qualification", "Date Of Birth", "Phone Number", "Address", "Date Of Join", "Salary", "User Name", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("");
        jTable1.setCellSelectionEnabled(true);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        BringData.setBackground(new java.awt.Color(0, 136, 167));
        BringData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BringDataMousePressed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/images/icons8_Restart_64px.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout BringDataLayout = new javax.swing.GroupLayout(BringData);
        BringData.setLayout(BringDataLayout);
        BringDataLayout.setHorizontalGroup(
            BringDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, Short.MAX_VALUE)
        );
        BringDataLayout.setVerticalGroup(
            BringDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BringDataLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BringData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 978, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BringData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void BringDataMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BringDataMousePressed
        AddRowsTojTable();
        s.RetrivingData();
    }//GEN-LAST:event_BringDataMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BringData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

public void AddRowsTojTable() {
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        while (model.getRowCount()>0)
       {for(int r=0;r<model.getRowCount();r++)
        {
           model.removeRow(r);
        }
       }
       
       Object rowData[] = new Object[10];

           Employee w = new Employee();
        ArrayList<Employee> show = new ArrayList<Employee>();

        show = x.EmpShowData();
        
        if(show!=null)
        {
            for (Employee j : show) {
                rowData[0] = j.getEmpName();
                rowData[1] = j.getEmpGender();
                rowData[2] = j.getQualifiactions();
                rowData[3] = j.getEmpDOB();
                rowData[4] = j.getEmpPhoneNum();
                rowData[5] = j.getEmpAddress();
                rowData[6] = j.getEmpDOJ();
                rowData[7] = j.getEmpSalary();
                rowData[8] = j.getUserName();
                rowData[9] = j.getPassword();
                        
                model.addRow(rowData);
         }
            
            
        }
}
 public void ResetTable()
 {
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
       while (model.getRowCount()>0)
       {
           for(int r=0;r<model.getRowCount();r++)
            {
                   model.removeRow(r);
            }
       }
     
       
 
 }

}
